{"version":3,"sources":["components/Signin.jsx","components/Register.jsx","components/PredictedColors.jsx","components/Entries.jsx","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Signin","changeRoute","setUserProfile","useState","email","setEmail","password","setPassword","className","type","onChange","event","target","value","onClick","fetch","method","headers","body","JSON","stringify","then","response","json","user","id","catch","err","console","log","Register","name","setName","alert","PredictedColors","colors","map","color","key","probability","Entries","entries","Home","user_name","user_id","user_entries","url","setUrl","predictedColors","setPredictedColors","enrtries","setEnrtries","entry","href","src","alt","width","height","App","route","setRoute","joined","userProfile","handleRouteChange","route_change","loadUserProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.993dc234.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./Signin.css\";\r\n\r\nconst Signin = ({ changeRoute, setUserProfile }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSigninEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleSigninPassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSigninSubmit = () => {\r\n    fetch(\"http://localhost:8000/signin\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user.id) {\r\n          setUserProfile(user);\r\n          changeRoute(\"home\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin\">\r\n      <h1>Color Prediction AppðŸ”®</h1>\r\n      <hr />\r\n      <br />\r\n      <form>\r\n        <label>Email: </label>\r\n        <input type=\"email\" onChange={handleSigninEmail} />\r\n        <br />\r\n\r\n        <label>Password: </label>\r\n        <input type=\"password\" onChange={handleSigninPassword} />\r\n        <br />\r\n\r\n        <input type=\"button\" value=\"Sign in\" onClick={handleSigninSubmit} />\r\n        <br />\r\n        <input\r\n          type=\"button\"\r\n          value=\"register\"\r\n          onClick={() => changeRoute(\"register\")}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import { useState } from \"react\";\r\nimport \"./register.css\";\r\n\r\nconst Register = ({ changeRoute, setUserProfile }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleNameRegister = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleEmailRegister = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordRegister = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleRegisterSubmit = () => {\r\n    fetch(\"http://localhost:8000/register\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user.id) {\r\n          setUserProfile(user);\r\n          changeRoute(\"home\");\r\n        } else {\r\n          alert(\"Failed to register user!\");\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Fill in your credentialsðŸ‘‡</h2>\r\n      <form>\r\n        <label>Name: </label>\r\n        <input type=\"text\" onChange={handleNameRegister} />\r\n        <br />\r\n\r\n        <label>Email: </label>\r\n        <input type=\"email\" onChange={handleEmailRegister} />\r\n        <br />\r\n\r\n        <label>password: </label>\r\n        <input type=\"password\" onChange={handlePasswordRegister} />\r\n        <br />\r\n\r\n        <input type=\"button\" value=\"register\" onClick={handleRegisterSubmit} />\r\n        <br />\r\n        <input\r\n          type=\"button\"\r\n          value=\"signin\"\r\n          onClick={() => changeRoute(\"signin\")}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import \"./predictedColors.css\";\r\n\r\nconst PredictedColors = ({ colors }) => {\r\n  return (\r\n    <div className=\"predict\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>S/No.</th>\r\n            <th>Color</th>\r\n            <th>Probability</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {colors.map((color, key) => (\r\n            <tr key={key}>\r\n              <td>{key + 1}</td>\r\n              <td>{color.name}</td>\r\n              <td>{color.probability}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictedColors;\r\n","const Entries = ({ entries }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        <strong>Entries:</strong>\r\n      </label>\r\n      {entries}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Entries;\r\n","import \"./home.css\";\r\nimport { useState } from \"react\";\r\nimport PredictedColors from \"./PredictedColors\";\r\nimport Entries from \"./Entries\";\r\n\r\nconst Home = ({ user_name, changeRoute, user_id, user_entries }) => {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [predictedColors, setPredictedColors] = useState([]);\r\n  const [enrtries, setEnrtries] = useState(user_entries);\r\n\r\n  const handleImageUrl = (event) => {\r\n    setUrl(event.target.value);\r\n  };\r\n\r\n  const updateEntries = () => {\r\n    fetch(\"http://localhost:8000/entry\", {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: user_id }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((entry) => setEnrtries(entry))\r\n      .catch((err) => console.log(\"Something wrong!\"));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    fetch(\"http://localhost:8000/home\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ url: url }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((colors) => {\r\n        if (colors) {\r\n          updateEntries();\r\n          setPredictedColors(colors);\r\n        }\r\n      })\r\n      .catch((err) => alert(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Hello {user_name}, Welcome!</h3>\r\n      <hr />\r\n      <br />\r\n\r\n      <p>Insert an image url and let us predict the colors on the imageðŸ˜Š</p>\r\n\r\n      <label>Image URL: </label>\r\n      <input type=\"text\" onChange={handleImageUrl} />\r\n      <br />\r\n\r\n      <input type=\"button\" value=\"Predict\" onClick={handleSubmit} />\r\n      <br />\r\n      <br />\r\n\r\n      {enrtries && <Entries entries={enrtries} />}\r\n\r\n      <h2>The Image URL:</h2>\r\n      <a href={url}>{url}</a>\r\n\r\n      <h2>The Image:</h2>\r\n      {url && <img src={url} alt=\"prediction\" width=\"200\" height=\"200\" />}\r\n\r\n      <h2>Predicted Colors: </h2>\r\n      <PredictedColors colors={predictedColors} />\r\n\r\n      <input\r\n        type=\"button\"\r\n        value=\"signout\"\r\n        onClick={() => changeRoute(\"signin\")}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport Signin from \"./components/Signin\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [route, setRoute] = useState(\"signin\");\n  const [userProfile, setUserProfile] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: \"\",\n    joined: \"\",\n  });\n\n  const handleRouteChange = (route_change) => {\n    setRoute(route_change);\n  };\n\n  const loadUserProfile = (user) => {\n    setUserProfile({\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      joined: user.joined,\n      entries: user.entries,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {route === \"signin\" ? (\n        <Signin\n          changeRoute={handleRouteChange}\n          setUserProfile={loadUserProfile}\n        />\n      ) : route === \"register\" ? (\n        <Register\n          changeRoute={handleRouteChange}\n          setUserProfile={loadUserProfile}\n        />\n      ) : (\n        <Home\n          changeRoute={handleRouteChange}\n          user_name={userProfile.name}\n          user_id={userProfile.id}\n          user_entries={userProfile.entries}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}